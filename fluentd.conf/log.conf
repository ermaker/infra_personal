<match **.xing>
  type record_reformer
  tag ${tag}.ruby
</match>

<filter **.ruby>
  @type parser
  format /^(?<log_level_short>.), \[(?<time>.*?)\s+?#(?<pid>\d+)\] (?<log_level>\w+?) -- (?<log_tag>\S+?)?: (?<log>.*?)$/
  # format /^(?<service_name>.+?)(\.(?<service_number>\d+?))?\s+?\| (?<log>.+?)$/
  key_name log
  reserve_data yes
</filter>

<match **.mshard>
  type record_reformer
  tag ${tag}.foreman
</match>

<match **.honeypot>
  type record_reformer
  tag ${tag}.foreman
</match>

<filter **.kibana>
  @type parser
  format json
  key_name log
  reserve_data yes
</filter>

<match **.nginx-proxy>
  type record_reformer
  tag ${tag}.forego_
</match>

<filter **.forego_>
  @type parser
  format /^(?<service_name>.+?)(\.(?<service_number>\d+?))?\s+?\| (?<log>.+?)$/
  key_name log
  reserve_data yes
</filter>

<filter **.foreman>
  @type parser
  format /^(?<logged_time>\d{2}:\d{2}:\d{2}) (?<service_name>.+?)\.(?<service_number>\d+?)\s+\| (?<log>.+?)$/
  key_name log
  reserve_data yes
</filter>

<match **.forego_ **.foreman>
  @type rewrite_tag_filter
  rewriterule1 service_name ^(.+?)$ ${tag}.$1
  rewriterule2 service_name .* ${tag}.unknown
</match>

<filter **.dockergen>
  @type parser
  format /^(?<time>.+? .+?) (?<log>.+?)$/
  key_name log
  reserve_data yes
</filter>

<match **.nginx>
  @type rewrite_tag_filter
  rewriterule1 log ^(?<remote>.+?) (?<host>.+?) (?<user>.+?) \[(?<time>.+?)\] "(?<method>.+?)(?: (?<path>.+?)(?: (?<version>.+?))?)?" (?<code>.+?) (?<size>.+?) "(?<referer>.+?)" "(?<agent>.+?)"$ ${tag}.access
  rewriterule2 log ^(?<time>.+? .+?) \[(?<log_level>.+?)\] (?<pid>.+?)#(?<tid>.+?): (?<message>.+)$ ${tag}.error
  rewriterule3 log .* ${tag}.unknown
</match>

<filter **.nginx.access>
  @type parser
  format /^(?<remote>.+?) (?<host>.+?) (?<user>.+?) \[(?<time>.+?)\] "(?<method>.+?)(?: (?<path>.+?)(?: (?<version>.+?))?)?" (?<code>.+?) (?<size>.+?) "(?<referer>.+?)" "(?<agent>.+?)"$/
  time_format %d/%b/%Y:%H:%M:%S %z
  key_name log
  reserve_data yes
</filter>

<filter **.nginx.error>
  @type parser
  format /^(?<time>.+? .+?) \[(?<log_level>.+?)\] (?<pid>.+?)#(?<tid>.+?): (?<message>.+)$/
  key_name log
  reserve_data yes
</filter>

# <filter **.es>
#   @type parser
#   format json
#   key_name log
#   reserve_data yes
# </filter>

# <filter **.fluentd>
#   @type parser
#   format json
#   key_name log
#   reserve_data yes
# </filter>

# <filter **.redis>
#   @type parser
#   format json
#   key_name log
#   reserve_data yes
# </filter>

# <filter **.mongo>
#   @type parser
#   format json
#   key_name log
#   reserve_data yes
# </filter
