<source>
  type tail
  format json
  time_key time
  path /var/lib/docker/containers/*/*-json.log
  pos_file /var/lib/docker/containers/containers.log.pos
  time_format %Y-%m-%dT%H:%M:%S
  tag file.docker.*
</source>

<match file.docker.var.lib.docker.containers.*.*.log>
  @type docker_format
  container_id ${tag_parts[6]}
  tag tag.raw.docker.${name}
</match>

<source>
  type forward
</source>

<match tag.**>
  type record_reformer
  tag ${tag_suffix[1]}
  <record>
    tag ${tag_suffix[1]}
  </record>
</match>

<match raw.docker.**>
  @type rewrite_tag_filter
  rewriterule1 tag ^raw\.docker\..+_(.+)_\d+$ docker.$1
  rewriterule2 tag ^raw\.docker\.(.+)$ docker.$1
</match>

<filter docker.kibana>
  @type parser
  format json
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<match docker.nginx>
  @type rewrite_tag_filter
  rewriterule1 log ^(?<remote>.+?) (?<host>.+?) (?<user>.+?) \[(?<time>.+?)\] "(?<method>.+?)(?: (?<path>.+?)(?: (?<version>.+?))?)?" (?<code>.+?) (?<size>.+?) "(?<referer>.+?)" "(?<agent>.+?)"$ docker.nginx.access
  rewriterule2 log ^(?<time>.+? .+?) \[(?<log_level>.+?)\] (?<pid>.+?)#(?<tid>.+?): (?<message>.+)$ docker.nginx.error
  rewriterule3 log .* docker.nginx.raw
</match>

<filter docker.nginx.access>
  @type parser
  format /^(?<remote>.+?) (?<host>.+?) (?<user>.+?) \[(?<time>.+?)\] "(?<method>.+?)(?: (?<path>.+?)(?: (?<version>.+?))?)?" (?<code>.+?) (?<size>.+?) "(?<referer>.+?)" "(?<agent>.+?)"$/
  time_format %d/%b/%Y:%H:%M:%S %z
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<filter docker.nginx.error>
  @type parser
  format /^(?<time>.+? .+?) \[(?<log_level>.+?)\] (?<pid>.+?)#(?<tid>.+?): (?<message>.+)$/
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<filter docker.nginx-proxy>
  @type parser
  format nginx
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<filter docker.es>
  @type parser
  format json
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<filter docker.fluentd>
  @type parser
  format json
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<filter docker.redis>
  @type parser
  format json
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<filter docker.mongo>
  @type parser
  format json
  key_name log
  reserve_data yes
  suppress_parse_error_log true
</filter>

<match docker.**>
  type elasticsearch
  include_tag_key true
  hosts es:9200
  logstash_format true
  logstash_prefix docker

  # buffer
  buffer_type file
  buffer_path /var/lib/docker/fluentd/buffer/container.*.buffer
  buffer_chunk_limit 8m
  buffer_queue_limit 10000
  retry_limit 17
  flush_interval 5
</match>
